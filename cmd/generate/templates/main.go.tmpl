package main

import (
	"github.com/fanky5g/ponzu/generator"
	"github.com/fanky5g/ponzu/content"
	contentGenerator "github.com/fanky5g/ponzu/generator/content"
	modelGenerator "github.com/fanky5g/ponzu/generator/models"
	types "{{ .ModulePath }}/{{ .Config.Content.Target.Package }}"
	"log"
)

func main() {
    {{- if eq .ContentType 2 }}
    contentType := generator.Content
    {{- else if eq .ContentType 3 }}
    contentType := generator.FieldCollection
    {{- else }}
    contentType := generator.Plain
    {{- end }}

	contentTypes := content.Types{
		Content:          types.Content,
		FieldCollections: types.FieldCollections,
		Definitions:      types.Definitions,
	}

    contentGeneratorConfig := generator.Config{
        Target: generator.Target{
            Path: generator.Path{
                Root: "{{ .Config.Content.Target.Path.Root }}",
                Base: "{{ .Config.Content.Target.Path.Base }}",
            },
            Package: "{{ .Config.Content.Target.Package }}",
        },
        {{- if eq .ContentType 2 }}
        Type: generator.Content,
        {{- else if eq .ContentType 3 }}
        Type: generator.FieldCollection,
        {{- else }}
        Type: generator.Plain,
        {{- end }}
    }

    modelGeneratorConfig := generator.Config{
        Target: generator.Target{
            Path: generator.Path{
                Root: "{{ .Config.Models.Target.Path.Root }}",
                Base: "{{ .Config.Models.Target.Path.Base }}",
            },
            Package: "{{ .Config.Models.Target.Package }}",
        },
    }

	contentGeneratorInstance, err := contentGenerator.New(contentGeneratorConfig, contentTypes)
	if err != nil {
		log.Fatal(err)
	}

	generator.Register(contentGeneratorInstance)

	modelGeneratorInstance, err := modelGenerator.New(modelGeneratorConfig, contentGeneratorConfig)
	if err != nil {
        log.Fatal(err)
    }

    generator.Register(modelGeneratorInstance)

	if err = generator.Run(contentType, []string{
       {{- range .Arguments }}
       "{{ . }}",
       {{- end }}
   }); err != nil {
        log.Panic(err)
    }
}
