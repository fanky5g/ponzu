package {{ .Target.Package }}

import (
	"github.com/fanky5g/ponzu/generator"
)

type {{ .Definition.Name }} struct {
    {{ range .Fields nil }}{{ if and .IsReference (not (or .IsFieldCollection .IsNested)) }}{{ .Name }} {{ .TypeName }} `json:"{{ .JSONName }}" reference:"{{ .ReferenceName }}"`{{ else }}{{ .Name }} {{ .TypeName }} `json:"{{ .JSONName }}"`{{ end }}
    {{ end }}}

func init() {
	Definitions["{{ .Definition.Name }}"] = generator.TypeDefinition {
	    {{- if eq .Definition.Type 1 }}
	    Type:          generator.Plain,
	    {{- else if eq .Definition.Type 2 }}
	    Type:          generator.Content,
	    {{- else if eq .Definition.Type 3 }}
	    Type:          generator.FieldCollection,
	    {{- end }}
        Name:          "{{ .Definition.Name }}",
        Label:         "{{ .Definition.Label }}",
        Metadata: generator.Metadata {
            MethodReceiverName: "{{ .Definition.Metadata.MethodReceiverName }}",
        },
        Blocks:        []generator.Block{
            {{- range .Definition.Blocks }}
                {
                    {{- if eq .Type 1 }}
                    Type:          generator.Field,
                    {{- else if eq .Type 2 }}
                    Type:          generator.ContentBlock,
                    {{- end }}
                    Name:  "{{ .Name }}",
                    Label: "{{ .Name }}",
                    TypeName: "{{ .TypeName }}",
                    JSONName: "{{ .JSONName }}",
                    ReferenceName: "{{ .ReferenceName }}",
                    ReferenceJSONTags: []string{
                        {{ range .ReferenceJSONTags }}{{ . }}
                        {{ end }}
                    },
                    Definition: generator.BlockDefinition {
                        Title:       "{{ .Definition.Title }}",
                        Type:        "{{ .Definition.Type }}",
                        IsArray:     {{ .Definition.IsArray }},
                        IsReference: {{ .Definition.IsReference }},
                    },
                },
            {{- end }}
        },
	}
}
